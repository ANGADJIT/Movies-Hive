#** PROJECT FLOW **#
DATA[HDFS] -> TRANSAFORMERS -> QUERY -> OUTPUTS[HDFS]

#* TRANSFORMERS

# ENABLE ACID TABLES
SET hive.support.concurrency=true;
SET hive.txn.manager=org.apache.hadoop.hive.ql.lockmgr.DbTxnManager;
SET hive.enforce.bucketing=true;
SET hive.exec.dynamic.partition.mode=nostrict;
SET hive.compactor.initiator.on=true;
SET hive.compactor.worker.threads=1;


# MOVIES BASE TABLE
CREATE TEMPORARY TABLE PROJ.MOVIES_BASE(
    ID STRING,NAME STRING,YEAR STRING,TIMING STRING,RATING DOUBLE,VOTES STRING,GENRE STRING,LANG STRING 
) ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n' STORED AS TEXTFILE;

# LOAD DATA FROM HDFS
LOAD DATA INPATH '/data/movies.csv' OVERWRITE INTO TABLE MOVIES_BASE;

# ACID TABLE
CREATE TEMPORARY TABLE PROJ.MOVIES_ACID(
    NAME STRING,YEAR STRING,TIMING STRING,RATING DOUBLE,VOTES STRING,GENRE STRING,LANG STRING 
) CLUSTERED BY (NAME) INTO 1 BUCKETS
ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n' STORED AS ORC TBLPROPERTIES('transactional'='true');

# Load Data From Base To Acid Table for TRANSFORMATION
INSERT INTO TABLE MOVIES_ACID SELECT NAME,YEAR,TIMING,RATING,VOTES,GENRE,LANG FROM MOVIES_BASE;

# Main Movie Table
CREATE TEMPORARY TABLE PROJ.MOVIES(
    NAME STRING,YEAR INT,TIMING INT,RATING DOUBLE,VOTES INT,GENRE STRING,LANG STRING 
) ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n' STORED AS PARQUET ;

# Main Query Table 

#* SUB TRANFORMATION CMDS
# drop id column by copying into newer one ..

# for extracting numbers from string
SELECT REGEXP_EXTRACT(YEAR,'[0-9]+',0);

# for timing convertion 
SELECT REGEXP_REPLACE(TIMING,' min','');

# for convertion of votes
SELECT REGEXP_REPLACE(VOTES,',','');

# Queries

1. 